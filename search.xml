<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>小白菜笔记--React（一）</title>
      <link href="/2021/08/14/xiao-bai-cai-bi-ji-react-yi/"/>
      <url>/2021/08/14/xiao-bai-cai-bi-ji-react-yi/</url>
      
        <content type="html"><![CDATA[<h1 id="小白菜笔记–React（一）"><a href="#小白菜笔记–React（一）" class="headerlink" title="小白菜笔记–React（一）"></a>小白菜笔记–React（一）</h1><h2 id="写在前面的碎碎念💬："><a href="#写在前面的碎碎念💬：" class="headerlink" title="写在前面的碎碎念💬："></a>写在前面的碎碎念💬：</h2><p>从大学自学前端到毕业做非前端工作再到裸辞重新学前端，两次学习的体会还是有所不同的。第一次学习的经历就像盲人摸象，摸到啥是啥，跟着网上的教程做，自己设置需求然后不断写bug，当时还是学生，时间也多，做了几个自认为不错的项目，凭着一股初生牛犊不怕虎的劲儿兴冲冲的找工作，当然结果是没找着，好像一股热情被浇了盆冰水。后面在亲戚介绍下做了份不搭边的工作，算是温水煮青蛙的过了三年，期间也有段时间在坚持学习前端知识，但终究还是迫于时间和工作的压力，顶多算是学了点水花。因为工作的关系，为提高效率，后来花了很多时间在学习VBA和Excel函数。虽然只算涉猎了些皮毛，但庆幸自己一直在坚持学习，脑子不太生锈，第二次学习虽然不如第一次掌握得快，但多嚼几遍总能加深印象。当然了，第二次学习更加是得益于有了系统的学习方法和前人的指导，内心里还是十分感激这些老师们的。好像说得有点多，这个等有空再整理出来吧。因为是刚写完几个React的项目，所以想着趁热打铁把笔记写到博客里，方便温故知新。</p><h2 id="React-怎么用"><a href="#React-怎么用" class="headerlink" title="React 怎么用"></a>React 怎么用</h2><ol><li><p>通过 CDN 引入</p><p> 用 &lt;script&gt; 先引入 <code>react.x.min.js</code> 再引入 <code>react-dom.x.min.js</code><br> 可以到 <a href="https://www.bootcdn.cn/">BootCDN</a> 搜索 CDN</p></li><li><p>通过 webpack 引入</p><p> 使用你喜欢的包管理器进行安装</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> react react-dom<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> 在项目中通过 <code>import</code> 引入</p> <pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token keyword">import</span> ReactDOM <span class="token keyword">from</span> <span class="token string">'react-dom'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>通入 Create React App 引入</p><p> 前置条件：<code>Node.js</code> <code>Cmder</code></p><p> 在预备创建项目的地方执行打开 <code>Cmder</code> 以下命令（关于 <code>Cmder</code> 等安装配置后面有空整理出来🙆‍♀）</p> <pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npx create-react-app my-app<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> 因为是自己做项目，所以一般用的第3种方式创建 React 应用，这种方式会配置好开发环境。成功后的目录是这样的</p> <pre class="line-numbers language-none"><code class="language-none">my-app├─ .git├─ .gitignore├─ package.json├─ public│  ├─ favicon.ico│  ├─ index.html│  ├─ logo192.png│  ├─ logo512.png│  ├─ manifest.json│  └─ robots.txt├─ README.md├─ src│  ├─ App.css│  ├─ App.js│  ├─ App.test.js│  ├─ index.css│  ├─ index.js│  ├─ logo.svg│  ├─ reportWebVitals.js│  └─ setupTests.js└─ yarn.lock<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h2 id="JSX-是什么"><a href="#JSX-是什么" class="headerlink" title="JSX 是什么"></a>JSX 是什么</h2><p>先来看一段有趣的代码吧</p><pre class="line-numbers language-jsx" data-language="jsx"><code class="language-jsx"><span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Hello, world!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>咋一看会以为是一个普通的 <code>JavaScript</code> 变量声明，但仔细看这个变量的值是一个并没有用引号包裹的 <code>HTML</code> 标签。这就是 <code>JSX</code>，它是一个 <code>JavaScript</code> 的语法扩展。一般建议在 <code>React</code> 中配合使用 <code>JSX</code>，<code>JSX</code> 可以很好地描述 UI 应该呈现出它应有交互的本质形式。<code>JSX</code> 可能会使人联想到模板语言，但它具有 JavaScript 的全部功能。<code>JSX</code> 可以生成 <code>React</code> “元素”。</p>]]></content>
      
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/08/10/hello-world/"/>
      <url>/2021/08/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
